spring.application.name=Tienda_Generica

# Database
spring.data.mongodb.database=generic_store
app.cors.allowedOrigin=http://localhost:8080
#spring.data.mongodb.host=localhost
#spring.data.mongodb.port=27017

# Docker
spring.data.mongodb.host=${SPRING_DATA_MONGODB_HOST:localhost}
spring.data.mongodb.port=${SPRING_DATA_MONGODB_PORT:27017}

# Retry & WebClient
mintic.webclient.baseurl=https://api.exchangerate-api.com/v4/latest/
mintic.retry.maxAttempts=5
mintic.retry.delay=1500
mintic.retry.multiplier=1.5
mintic.retry.maxDelay=10000

# App Properties
mintic.app.jwtSecret=genericstoreV2
mintic.app.jwtExpirationMs= 864000000

# Redis
spring.redis.host=localhost
spring.redis.port=6379
spring.data.redis.timeout= 2000ms

# CircuitBreaker
resilience4j.circuitbreaker.instances.myServiceCB.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.myServiceCB.slidingWindowSize=5
resilience4j.circuitbreaker.instances.myServiceCB.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.myServiceCB.failureRateThreshold=50
resilience4j.circuitbreaker.instances.myServiceCB.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.myServiceCB.permittedNumberOfCallsInHalfOpenState=3

# Actuator and Prometheus
management.endpoints.web.exposure.include=health,info,metrics,prometheus,env,beans,loggers
management.endpoint.health.show-details=always

# Prometheus
management.endpoint.prometheus.enabled=true
management.server.port=8080
management.server.base-path=/actuator
spring.security.enabled=false

# GZIP
server.compression.enabled=true
server.compression.mime-types=text/html,application/json,application/xml,text/plain
server.compression.min-response-size=1024

# AWS S3
aws.access.key=
aws.secret.key=
aws.region=us-east-1
aws.overrideUrl=https://s3.us-east-1.amazonaws.com

# FILES CONFIG
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.destination.folder="src/main/resources/static/"

# LOGGING
# logging.level.software.amazon.awssdk=DEBUG
